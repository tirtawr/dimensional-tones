{"version":3,"sources":["lib/DragControls.js","lib/OrbitControls.js","lib/Engine.js","App.js","reportWebVitals.js","index.js"],"names":["DragControls","_objects","_camera","_domElement","_plane","Plane","_raycaster","Raycaster","_mouse","Vector2","_offset","Vector3","_intersection","_worldPosition","_inverseMatrix","Matrix4","_intersections","_selected","_hovered","scope","this","activate","addEventListener","onPointerMove","onPointerDown","onPointerCancel","onTouchMove","onTouchStart","onTouchEnd","deactivate","removeEventListener","style","cursor","event","preventDefault","pointerType","rect","getBoundingClientRect","x","clientX","left","width","y","clientY","top","height","setFromCamera","enabled","ray","intersectPlane","position","copy","sub","applyMatrix4","dispatchEvent","type","object","length","intersectObjects","setFromNormalAndCoplanarPoint","getWorldDirection","normal","setFromMatrixPosition","matrixWorld","onMouseMove","transformGroup","parent","invert","onMouseDown","onMouseCancel","changedTouches","dispose","getObjects","prototype","Object","create","EventDispatcher","constructor","OrbitControls","domElement","undefined","console","warn","document","error","target","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","listenToKeyEvents","onKeyDown","saveState","reset","updateProjectionMatrix","changeEvent","update","state","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","lastPosition","lastQuaternion","twoPI","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","onContextMenu","onMouseWheel","ownerDocument","onPointerUp","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","tan","fov","clientHeight","matrix","isOrthographicCamera","right","clientWidth","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","subVectors","handleTouchMovePan","handleTouchMoveDolly","mouseAction","focus","window","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseUp","stopPropagation","handleMouseWheel","needsUpdate","keyCode","handleKeyDown","handleTouchStartDollyPan","DOLLY_ROTATE","handleTouchStartDollyRotate","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","MapControls","call","container","camera","scene","renderer","orbitControls","dragControls","xPlane","yPlane","zPlane","alternatingTimeline","concurrentTimeline","tonalBoxes","planePosition","tonalBoxRadius","fullLoopDuration","onTimelineUpdate","z","i","intersectXPlane","intersectYPlane","intersectZPlane","prevIsOn","isOn","newIsOn","material","onMaterial","offMaterial","Tone","toDestination","triggerAttackRelease","note","detectTonalBoxesIntersection","initTonalBoxesForPlayback","ensureInsideBoundingBox","onWindowResize","aspect","innerWidth","innerHeight","setSize","exports","init","createElement","body","appendChild","THREE","background","light","castShadow","shadow","near","far","mapSize","initLighting","boundingLines","params","param","color","push","boundingLine","receiveShadow","initBoundingBox","geometry","wireframe","initTonalBoxes","gridHelper","initGridHelper","transparent","opacity","visible","anime","timeline","autoplay","loop","easing","targets","duration","changeBegin","_anim","changeComplete","antialias","setPixelRatio","devicePixelRatio","shadowMap","animate","requestAnimationFrame","render","playAlternating","play","playConcurrent","resetPlayback","pause","seek","randomizeTonalBoxesPosition","floor","random","App","useState","playbackStatus","setPlaybackStatus","useEffect","Engine","id","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4bc77ccb.chunk.js","sourcesContent":["/* eslint-disable */\nimport {\n  EventDispatcher,\n  Matrix4,\n  Plane,\n  Raycaster,\n  Vector2,\n  Vector3\n} from 'three';\n\nvar DragControls = function (_objects, _camera, _domElement) {\n\n  var _plane = new Plane();\n  var _raycaster = new Raycaster();\n\n  var _mouse = new Vector2();\n  var _offset = new Vector3();\n  var _intersection = new Vector3();\n  var _worldPosition = new Vector3();\n  var _inverseMatrix = new Matrix4();\n  var _intersections = [];\n\n  var _selected = null, _hovered = null;\n\n  //\n\n  var scope = this;\n\n  function activate() {\n\n    _domElement.addEventListener('pointermove', onPointerMove);\n    _domElement.addEventListener('pointerdown', onPointerDown);\n    _domElement.addEventListener('pointerup', onPointerCancel);\n    _domElement.addEventListener('pointerleave', onPointerCancel);\n    _domElement.addEventListener('touchmove', onTouchMove);\n    _domElement.addEventListener('touchstart', onTouchStart);\n    _domElement.addEventListener('touchend', onTouchEnd);\n\n  }\n\n  function deactivate() {\n\n    _domElement.removeEventListener('pointermove', onPointerMove);\n    _domElement.removeEventListener('pointerdown', onPointerDown);\n    _domElement.removeEventListener('pointerup', onPointerCancel);\n    _domElement.removeEventListener('pointerleave', onPointerCancel);\n    _domElement.removeEventListener('touchmove', onTouchMove);\n    _domElement.removeEventListener('touchstart', onTouchStart);\n    _domElement.removeEventListener('touchend', onTouchEnd);\n\n    _domElement.style.cursor = '';\n\n  }\n\n  function dispose() {\n\n    deactivate();\n\n  }\n\n  function getObjects() {\n\n    return _objects;\n\n  }\n\n  function onPointerMove(event) {\n\n    event.preventDefault();\n\n    switch (event.pointerType) {\n\n      case 'mouse':\n      case 'pen':\n        onMouseMove(event);\n        break;\n\n      // TODO touch\n\n    }\n\n  }\n\n  function onMouseMove(event) {\n\n    var rect = _domElement.getBoundingClientRect();\n\n    _mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n    _mouse.y = - ((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n    _raycaster.setFromCamera(_mouse, _camera);\n\n    if (_selected && scope.enabled) {\n\n      if (_raycaster.ray.intersectPlane(_plane, _intersection)) {\n\n        _selected.position.copy(_intersection.sub(_offset).applyMatrix4(_inverseMatrix));\n\n      }\n\n      scope.dispatchEvent({ type: 'drag', object: _selected });\n\n      return;\n\n    }\n\n    _intersections.length = 0;\n\n    _raycaster.setFromCamera(_mouse, _camera);\n    _raycaster.intersectObjects(_objects, true, _intersections);\n\n    if (_intersections.length > 0) {\n\n      var object = _intersections[0].object;\n\n      _plane.setFromNormalAndCoplanarPoint(_camera.getWorldDirection(_plane.normal), _worldPosition.setFromMatrixPosition(object.matrixWorld));\n\n      if (_hovered !== object) {\n\n        scope.dispatchEvent({ type: 'hoveron', object: object });\n\n        _domElement.style.cursor = 'pointer';\n        _hovered = object;\n\n      }\n\n    } else {\n\n      if (_hovered !== null) {\n\n        scope.dispatchEvent({ type: 'hoveroff', object: _hovered });\n\n        _domElement.style.cursor = 'auto';\n        _hovered = null;\n\n      }\n\n    }\n\n  }\n\n  function onPointerDown(event) {\n\n    event.preventDefault();\n\n    switch (event.pointerType) {\n\n      case 'mouse':\n      case 'pen':\n        onMouseDown(event);\n        break;\n\n      // TODO touch\n\n    }\n\n  }\n\n  function onMouseDown(event) {\n\n    event.preventDefault();\n\n    _intersections.length = 0;\n\n    _raycaster.setFromCamera(_mouse, _camera);\n    _raycaster.intersectObjects(_objects, true, _intersections);\n\n    if (_intersections.length > 0) {\n\n      _selected = (scope.transformGroup === true) ? _objects[0] : _intersections[0].object;\n\n      if (_raycaster.ray.intersectPlane(_plane, _intersection)) {\n\n        _inverseMatrix.copy(_selected.parent.matrixWorld).invert();\n        _offset.copy(_intersection).sub(_worldPosition.setFromMatrixPosition(_selected.matrixWorld));\n\n      }\n\n      _domElement.style.cursor = 'move';\n\n      scope.dispatchEvent({ type: 'dragstart', object: _selected });\n\n    }\n\n\n  }\n\n  function onPointerCancel(event) {\n\n    event.preventDefault();\n\n    switch (event.pointerType) {\n\n      case 'mouse':\n      case 'pen':\n        onMouseCancel(event);\n        break;\n\n      // TODO touch\n\n    }\n\n  }\n\n  function onMouseCancel(event) {\n\n    event.preventDefault();\n\n    if (_selected) {\n\n      scope.dispatchEvent({ type: 'dragend', object: _selected });\n\n      _selected = null;\n\n    }\n\n    _domElement.style.cursor = _hovered ? 'pointer' : 'auto';\n\n  }\n\n  function onTouchMove(event) {\n\n    event.preventDefault();\n    event = event.changedTouches[0];\n\n    var rect = _domElement.getBoundingClientRect();\n\n    _mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n    _mouse.y = - ((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n    _raycaster.setFromCamera(_mouse, _camera);\n\n    if (_selected && scope.enabled) {\n\n      if (_raycaster.ray.intersectPlane(_plane, _intersection)) {\n\n        _selected.position.copy(_intersection.sub(_offset).applyMatrix4(_inverseMatrix));\n\n      }\n\n      scope.dispatchEvent({ type: 'drag', object: _selected });\n\n      return;\n\n    }\n\n  }\n\n  function onTouchStart(event) {\n\n    event.preventDefault();\n    event = event.changedTouches[0];\n\n    var rect = _domElement.getBoundingClientRect();\n\n    _mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n    _mouse.y = - ((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n    _intersections.length = 0;\n\n    _raycaster.setFromCamera(_mouse, _camera);\n    _raycaster.intersectObjects(_objects, true, _intersections);\n\n    if (_intersections.length > 0) {\n\n      _selected = (scope.transformGroup === true) ? _objects[0] : _intersections[0].object;\n\n      _plane.setFromNormalAndCoplanarPoint(_camera.getWorldDirection(_plane.normal), _worldPosition.setFromMatrixPosition(_selected.matrixWorld));\n\n      if (_raycaster.ray.intersectPlane(_plane, _intersection)) {\n\n        _inverseMatrix.copy(_selected.parent.matrixWorld).invert();\n        _offset.copy(_intersection).sub(_worldPosition.setFromMatrixPosition(_selected.matrixWorld));\n\n      }\n\n      _domElement.style.cursor = 'move';\n\n      scope.dispatchEvent({ type: 'dragstart', object: _selected });\n\n    }\n\n\n  }\n\n  function onTouchEnd(event) {\n\n    event.preventDefault();\n\n    if (_selected) {\n\n      scope.dispatchEvent({ type: 'dragend', object: _selected });\n\n      _selected = null;\n\n    }\n\n    _domElement.style.cursor = 'auto';\n\n  }\n\n  activate();\n\n  // API\n\n  this.enabled = true;\n  this.transformGroup = false;\n\n  this.activate = activate;\n  this.deactivate = deactivate;\n  this.dispose = dispose;\n  this.getObjects = getObjects;\n\n};\n\nDragControls.prototype = Object.create(EventDispatcher.prototype);\nDragControls.prototype.constructor = DragControls;\n\nexport { DragControls };","/* eslint-disable */\nimport {\n  EventDispatcher,\n  MOUSE,\n  Quaternion,\n  Spherical,\n  TOUCH,\n  Vector2,\n  Vector3\n} from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar OrbitControls = function (object, domElement) {\n\n  if (domElement === undefined) console.warn('THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.');\n  if (domElement === document) console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n\n  this.object = object;\n  this.domElement = domElement;\n\n  // Set to false to disable this control\n  this.enabled = true;\n\n  // \"target\" sets the location of focus, where the object orbits around\n  this.target = new Vector3();\n\n  // How far you can dolly in and out ( PerspectiveCamera only )\n  this.minDistance = 0;\n  this.maxDistance = Infinity;\n\n  // How far you can zoom in and out ( OrthographicCamera only )\n  this.minZoom = 0;\n  this.maxZoom = Infinity;\n\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  this.minPolarAngle = 0; // radians\n  this.maxPolarAngle = Math.PI; // radians\n\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n  this.minAzimuthAngle = - Infinity; // radians\n  this.maxAzimuthAngle = Infinity; // radians\n\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n  this.enableDamping = false;\n  this.dampingFactor = 0.05;\n\n  // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n  this.enableZoom = true;\n  this.zoomSpeed = 1.0;\n\n  // Set to false to disable rotating\n  this.enableRotate = true;\n  this.rotateSpeed = 1.0;\n\n  // Set to false to disable panning\n  this.enablePan = true;\n  this.panSpeed = 1.0;\n  this.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n  this.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n  this.autoRotate = false;\n  this.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n  // The four arrow keys\n  this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n  // Mouse buttons\n  this.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n  // Touch fingers\n  this.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n  // for reset\n  this.target0 = this.target.clone();\n  this.position0 = this.object.position.clone();\n  this.zoom0 = this.object.zoom;\n\n  // the target DOM element for key events\n  this._domElementKeyEvents = null;\n\n  //\n  // public methods\n  //\n\n  this.getPolarAngle = function () {\n\n    return spherical.phi;\n\n  };\n\n  this.getAzimuthalAngle = function () {\n\n    return spherical.theta;\n\n  };\n\n  this.listenToKeyEvents = function (domElement) {\n\n    domElement.addEventListener('keydown', onKeyDown);\n    this._domElementKeyEvents = domElement;\n\n  };\n\n  this.saveState = function () {\n\n    scope.target0.copy(scope.target);\n    scope.position0.copy(scope.object.position);\n    scope.zoom0 = scope.object.zoom;\n\n  };\n\n  this.reset = function () {\n\n    scope.target.copy(scope.target0);\n    scope.object.position.copy(scope.position0);\n    scope.object.zoom = scope.zoom0;\n\n    scope.object.updateProjectionMatrix();\n    scope.dispatchEvent(changeEvent);\n\n    scope.update();\n\n    state = STATE.NONE;\n\n  };\n\n  // this method is exposed, but perhaps it would be better if we can make it private...\n  this.update = function () {\n\n    var offset = new Vector3();\n\n    // so camera.up is the orbit axis\n    var quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n    var quatInverse = quat.clone().invert();\n\n    var lastPosition = new Vector3();\n    var lastQuaternion = new Quaternion();\n\n    var twoPI = 2 * Math.PI;\n\n    return function update() {\n\n      var position = scope.object.position;\n\n      offset.copy(position).sub(scope.target);\n\n      // rotate offset to \"y-axis-is-up\" space\n      offset.applyQuaternion(quat);\n\n      // angle from z-axis around y-axis\n      spherical.setFromVector3(offset);\n\n      if (scope.autoRotate && state === STATE.NONE) {\n\n        rotateLeft(getAutoRotationAngle());\n\n      }\n\n      if (scope.enableDamping) {\n\n        spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n        spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n      } else {\n\n        spherical.theta += sphericalDelta.theta;\n        spherical.phi += sphericalDelta.phi;\n\n      }\n\n      // restrict theta to be between desired limits\n\n      var min = scope.minAzimuthAngle;\n      var max = scope.maxAzimuthAngle;\n\n      if (isFinite(min) && isFinite(max)) {\n\n        if (min < - Math.PI) min += twoPI; else if (min > Math.PI) min -= twoPI;\n\n        if (max < - Math.PI) max += twoPI; else if (max > Math.PI) max -= twoPI;\n\n        if (min <= max) {\n\n          spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n\n        } else {\n\n          spherical.theta = (spherical.theta > (min + max) / 2) ?\n            Math.max(min, spherical.theta) :\n            Math.min(max, spherical.theta);\n\n        }\n\n      }\n\n      // restrict phi to be between desired limits\n      spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n\n      spherical.makeSafe();\n\n\n      spherical.radius *= scale;\n\n      // restrict radius to be between desired limits\n      spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius));\n\n      // move target to panned location\n\n      if (scope.enableDamping === true) {\n\n        scope.target.addScaledVector(panOffset, scope.dampingFactor);\n\n      } else {\n\n        scope.target.add(panOffset);\n\n      }\n\n      offset.setFromSpherical(spherical);\n\n      // rotate offset back to \"camera-up-vector-is-up\" space\n      offset.applyQuaternion(quatInverse);\n\n      position.copy(scope.target).add(offset);\n\n      scope.object.lookAt(scope.target);\n\n      if (scope.enableDamping === true) {\n\n        sphericalDelta.theta *= (1 - scope.dampingFactor);\n        sphericalDelta.phi *= (1 - scope.dampingFactor);\n\n        panOffset.multiplyScalar(1 - scope.dampingFactor);\n\n      } else {\n\n        sphericalDelta.set(0, 0, 0);\n\n        panOffset.set(0, 0, 0);\n\n      }\n\n      scale = 1;\n\n      // update condition is:\n      // min(camera displacement, camera rotation in radians)^2 > EPS\n      // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n      if (zoomChanged ||\n        lastPosition.distanceToSquared(scope.object.position) > EPS ||\n        8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n\n        scope.dispatchEvent(changeEvent);\n\n        lastPosition.copy(scope.object.position);\n        lastQuaternion.copy(scope.object.quaternion);\n        zoomChanged = false;\n\n        return true;\n\n      }\n\n      return false;\n\n    };\n\n  }();\n\n  this.dispose = function () {\n\n    scope.domElement.removeEventListener('contextmenu', onContextMenu);\n\n    scope.domElement.removeEventListener('pointerdown', onPointerDown);\n    scope.domElement.removeEventListener('wheel', onMouseWheel);\n\n    scope.domElement.removeEventListener('touchstart', onTouchStart);\n    scope.domElement.removeEventListener('touchend', onTouchEnd);\n    scope.domElement.removeEventListener('touchmove', onTouchMove);\n\n    scope.domElement.ownerDocument.removeEventListener('pointermove', onPointerMove);\n    scope.domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n\n\n    if (scope._domElementKeyEvents !== null) {\n\n      scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n\n    }\n\n    //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n  };\n\n  //\n  // internals\n  //\n\n  var scope = this;\n\n  var changeEvent = { type: 'change' };\n  var startEvent = { type: 'start' };\n  var endEvent = { type: 'end' };\n\n  var STATE = {\n    NONE: - 1,\n    ROTATE: 0,\n    DOLLY: 1,\n    PAN: 2,\n    TOUCH_ROTATE: 3,\n    TOUCH_PAN: 4,\n    TOUCH_DOLLY_PAN: 5,\n    TOUCH_DOLLY_ROTATE: 6\n  };\n\n  var state = STATE.NONE;\n\n  var EPS = 0.000001;\n\n  // current position in spherical coordinates\n  var spherical = new Spherical();\n  var sphericalDelta = new Spherical();\n\n  var scale = 1;\n  var panOffset = new Vector3();\n  var zoomChanged = false;\n\n  var rotateStart = new Vector2();\n  var rotateEnd = new Vector2();\n  var rotateDelta = new Vector2();\n\n  var panStart = new Vector2();\n  var panEnd = new Vector2();\n  var panDelta = new Vector2();\n\n  var dollyStart = new Vector2();\n  var dollyEnd = new Vector2();\n  var dollyDelta = new Vector2();\n\n  function getAutoRotationAngle() {\n\n    return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n  }\n\n  function getZoomScale() {\n\n    return Math.pow(0.95, scope.zoomSpeed);\n\n  }\n\n  function rotateLeft(angle) {\n\n    sphericalDelta.theta -= angle;\n\n  }\n\n  function rotateUp(angle) {\n\n    sphericalDelta.phi -= angle;\n\n  }\n\n  var panLeft = function () {\n\n    var v = new Vector3();\n\n    return function panLeft(distance, objectMatrix) {\n\n      v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n      v.multiplyScalar(- distance);\n\n      panOffset.add(v);\n\n    };\n\n  }();\n\n  var panUp = function () {\n\n    var v = new Vector3();\n\n    return function panUp(distance, objectMatrix) {\n\n      if (scope.screenSpacePanning === true) {\n\n        v.setFromMatrixColumn(objectMatrix, 1);\n\n      } else {\n\n        v.setFromMatrixColumn(objectMatrix, 0);\n        v.crossVectors(scope.object.up, v);\n\n      }\n\n      v.multiplyScalar(distance);\n\n      panOffset.add(v);\n\n    };\n\n  }();\n\n  // deltaX and deltaY are in pixels; right and down are positive\n  var pan = function () {\n\n    var offset = new Vector3();\n\n    return function pan(deltaX, deltaY) {\n\n      var element = scope.domElement;\n\n      if (scope.object.isPerspectiveCamera) {\n\n        // perspective\n        var position = scope.object.position;\n        offset.copy(position).sub(scope.target);\n        var targetDistance = offset.length();\n\n        // half of the fov is center to top of screen\n        targetDistance *= Math.tan((scope.object.fov / 2) * Math.PI / 180.0);\n\n        // we use only clientHeight here so aspect ratio does not distort speed\n        panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n        panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n\n      } else if (scope.object.isOrthographicCamera) {\n\n        // orthographic\n        panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n        panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n\n      } else {\n\n        // camera neither orthographic nor perspective\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n        scope.enablePan = false;\n\n      }\n\n    };\n\n  }();\n\n  function dollyOut(dollyScale) {\n\n    if (scope.object.isPerspectiveCamera) {\n\n      scale /= dollyScale;\n\n    } else if (scope.object.isOrthographicCamera) {\n\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n\n    } else {\n\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n      scope.enableZoom = false;\n\n    }\n\n  }\n\n  function dollyIn(dollyScale) {\n\n    if (scope.object.isPerspectiveCamera) {\n\n      scale *= dollyScale;\n\n    } else if (scope.object.isOrthographicCamera) {\n\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n\n    } else {\n\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n      scope.enableZoom = false;\n\n    }\n\n  }\n\n  //\n  // event callbacks - update the object state\n  //\n\n  function handleMouseDownRotate(event) {\n\n    rotateStart.set(event.clientX, event.clientY);\n\n  }\n\n  function handleMouseDownDolly(event) {\n\n    dollyStart.set(event.clientX, event.clientY);\n\n  }\n\n  function handleMouseDownPan(event) {\n\n    panStart.set(event.clientX, event.clientY);\n\n  }\n\n  function handleMouseMoveRotate(event) {\n\n    rotateEnd.set(event.clientX, event.clientY);\n\n    rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n\n    var element = scope.domElement;\n\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n\n    rotateStart.copy(rotateEnd);\n\n    scope.update();\n\n  }\n\n  function handleMouseMoveDolly(event) {\n\n    dollyEnd.set(event.clientX, event.clientY);\n\n    dollyDelta.subVectors(dollyEnd, dollyStart);\n\n    if (dollyDelta.y > 0) {\n\n      dollyOut(getZoomScale());\n\n    } else if (dollyDelta.y < 0) {\n\n      dollyIn(getZoomScale());\n\n    }\n\n    dollyStart.copy(dollyEnd);\n\n    scope.update();\n\n  }\n\n  function handleMouseMovePan(event) {\n\n    panEnd.set(event.clientX, event.clientY);\n\n    panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n\n    pan(panDelta.x, panDelta.y);\n\n    panStart.copy(panEnd);\n\n    scope.update();\n\n  }\n\n  function handleMouseUp( /*event*/) {\n\n    // no-op\n\n  }\n\n  function handleMouseWheel(event) {\n\n    if (event.deltaY < 0) {\n\n      dollyIn(getZoomScale());\n\n    } else if (event.deltaY > 0) {\n\n      dollyOut(getZoomScale());\n\n    }\n\n    scope.update();\n\n  }\n\n  function handleKeyDown(event) {\n\n    var needsUpdate = false;\n\n    switch (event.keyCode) {\n\n      case scope.keys.UP:\n        pan(0, scope.keyPanSpeed);\n        needsUpdate = true;\n        break;\n\n      case scope.keys.BOTTOM:\n        pan(0, - scope.keyPanSpeed);\n        needsUpdate = true;\n        break;\n\n      case scope.keys.LEFT:\n        pan(scope.keyPanSpeed, 0);\n        needsUpdate = true;\n        break;\n\n      case scope.keys.RIGHT:\n        pan(- scope.keyPanSpeed, 0);\n        needsUpdate = true;\n        break;\n\n    }\n\n    if (needsUpdate) {\n\n      // prevent the browser from scrolling on cursor keys\n      event.preventDefault();\n\n      scope.update();\n\n    }\n\n\n  }\n\n  function handleTouchStartRotate(event) {\n\n    if (event.touches.length == 1) {\n\n      rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n\n    } else {\n\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n\n      rotateStart.set(x, y);\n\n    }\n\n  }\n\n  function handleTouchStartPan(event) {\n\n    if (event.touches.length == 1) {\n\n      panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n\n    } else {\n\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n\n      panStart.set(x, y);\n\n    }\n\n  }\n\n  function handleTouchStartDolly(event) {\n\n    var dx = event.touches[0].pageX - event.touches[1].pageX;\n    var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    dollyStart.set(0, distance);\n\n  }\n\n  function handleTouchStartDollyPan(event) {\n\n    if (scope.enableZoom) handleTouchStartDolly(event);\n\n    if (scope.enablePan) handleTouchStartPan(event);\n\n  }\n\n  function handleTouchStartDollyRotate(event) {\n\n    if (scope.enableZoom) handleTouchStartDolly(event);\n\n    if (scope.enableRotate) handleTouchStartRotate(event);\n\n  }\n\n  function handleTouchMoveRotate(event) {\n\n    if (event.touches.length == 1) {\n\n      rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n\n    } else {\n\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n\n      rotateEnd.set(x, y);\n\n    }\n\n    rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n\n    var element = scope.domElement;\n\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n\n    rotateStart.copy(rotateEnd);\n\n  }\n\n  function handleTouchMovePan(event) {\n\n    if (event.touches.length == 1) {\n\n      panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n\n    } else {\n\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n\n      panEnd.set(x, y);\n\n    }\n\n    panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n\n    pan(panDelta.x, panDelta.y);\n\n    panStart.copy(panEnd);\n\n  }\n\n  function handleTouchMoveDolly(event) {\n\n    var dx = event.touches[0].pageX - event.touches[1].pageX;\n    var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    dollyEnd.set(0, distance);\n\n    dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n\n    dollyOut(dollyDelta.y);\n\n    dollyStart.copy(dollyEnd);\n\n  }\n\n  function handleTouchMoveDollyPan(event) {\n\n    if (scope.enableZoom) handleTouchMoveDolly(event);\n\n    if (scope.enablePan) handleTouchMovePan(event);\n\n  }\n\n  function handleTouchMoveDollyRotate(event) {\n\n    if (scope.enableZoom) handleTouchMoveDolly(event);\n\n    if (scope.enableRotate) handleTouchMoveRotate(event);\n\n  }\n\n  function handleTouchEnd( /*event*/) {\n\n    // no-op\n\n  }\n\n  //\n  // event handlers - FSM: listen for events and reset state\n  //\n\n  function onPointerDown(event) {\n\n    if (scope.enabled === false) return;\n\n    switch (event.pointerType) {\n\n      case 'mouse':\n      case 'pen':\n        onMouseDown(event);\n        break;\n\n      // TODO touch\n\n    }\n\n  }\n\n  function onPointerMove(event) {\n\n    if (scope.enabled === false) return;\n\n    switch (event.pointerType) {\n\n      case 'mouse':\n      case 'pen':\n        onMouseMove(event);\n        break;\n\n      // TODO touch\n\n    }\n\n  }\n\n  function onPointerUp(event) {\n\n    switch (event.pointerType) {\n\n      case 'mouse':\n      case 'pen':\n        onMouseUp(event);\n        break;\n\n      // TODO touch\n\n    }\n\n  }\n\n  function onMouseDown(event) {\n\n    // Prevent the browser from scrolling.\n    event.preventDefault();\n\n    // Manually set the focus since calling preventDefault above\n    // prevents the browser from setting it automatically.\n\n    scope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n    var mouseAction;\n\n    switch (event.button) {\n\n      case 0:\n\n        mouseAction = scope.mouseButtons.LEFT;\n        break;\n\n      case 1:\n\n        mouseAction = scope.mouseButtons.MIDDLE;\n        break;\n\n      case 2:\n\n        mouseAction = scope.mouseButtons.RIGHT;\n        break;\n\n      default:\n\n        mouseAction = - 1;\n\n    }\n\n    switch (mouseAction) {\n\n      case MOUSE.DOLLY:\n\n        if (scope.enableZoom === false) return;\n\n        handleMouseDownDolly(event);\n\n        state = STATE.DOLLY;\n\n        break;\n\n      case MOUSE.ROTATE:\n\n        if (event.ctrlKey || event.metaKey || event.shiftKey) {\n\n          if (scope.enablePan === false) return;\n\n          handleMouseDownPan(event);\n\n          state = STATE.PAN;\n\n        } else {\n\n          if (scope.enableRotate === false) return;\n\n          handleMouseDownRotate(event);\n\n          state = STATE.ROTATE;\n\n        }\n\n        break;\n\n      case MOUSE.PAN:\n\n        if (event.ctrlKey || event.metaKey || event.shiftKey) {\n\n          if (scope.enableRotate === false) return;\n\n          handleMouseDownRotate(event);\n\n          state = STATE.ROTATE;\n\n        } else {\n\n          if (scope.enablePan === false) return;\n\n          handleMouseDownPan(event);\n\n          state = STATE.PAN;\n\n        }\n\n        break;\n\n      default:\n\n        state = STATE.NONE;\n\n    }\n\n    if (state !== STATE.NONE) {\n\n      scope.domElement.ownerDocument.addEventListener('pointermove', onPointerMove);\n      scope.domElement.ownerDocument.addEventListener('pointerup', onPointerUp);\n\n      scope.dispatchEvent(startEvent);\n\n    }\n\n  }\n\n  function onMouseMove(event) {\n\n    if (scope.enabled === false) return;\n\n    event.preventDefault();\n\n    switch (state) {\n\n      case STATE.ROTATE:\n\n        if (scope.enableRotate === false) return;\n\n        handleMouseMoveRotate(event);\n\n        break;\n\n      case STATE.DOLLY:\n\n        if (scope.enableZoom === false) return;\n\n        handleMouseMoveDolly(event);\n\n        break;\n\n      case STATE.PAN:\n\n        if (scope.enablePan === false) return;\n\n        handleMouseMovePan(event);\n\n        break;\n\n    }\n\n  }\n\n  function onMouseUp(event) {\n\n    scope.domElement.ownerDocument.removeEventListener('pointermove', onPointerMove);\n    scope.domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n\n    if (scope.enabled === false) return;\n\n    handleMouseUp(event);\n\n    scope.dispatchEvent(endEvent);\n\n    state = STATE.NONE;\n\n  }\n\n  function onMouseWheel(event) {\n\n    if (scope.enabled === false || scope.enableZoom === false || (state !== STATE.NONE && state !== STATE.ROTATE)) return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    scope.dispatchEvent(startEvent);\n\n    handleMouseWheel(event);\n\n    scope.dispatchEvent(endEvent);\n\n  }\n\n  function onKeyDown(event) {\n\n    if (scope.enabled === false || scope.enablePan === false) return;\n\n    handleKeyDown(event);\n\n  }\n\n  function onTouchStart(event) {\n\n    if (scope.enabled === false) return;\n\n    event.preventDefault(); // prevent scrolling\n\n    switch (event.touches.length) {\n\n      case 1:\n\n        switch (scope.touches.ONE) {\n\n          case TOUCH.ROTATE:\n\n            if (scope.enableRotate === false) return;\n\n            handleTouchStartRotate(event);\n\n            state = STATE.TOUCH_ROTATE;\n\n            break;\n\n          case TOUCH.PAN:\n\n            if (scope.enablePan === false) return;\n\n            handleTouchStartPan(event);\n\n            state = STATE.TOUCH_PAN;\n\n            break;\n\n          default:\n\n            state = STATE.NONE;\n\n        }\n\n        break;\n\n      case 2:\n\n        switch (scope.touches.TWO) {\n\n          case TOUCH.DOLLY_PAN:\n\n            if (scope.enableZoom === false && scope.enablePan === false) return;\n\n            handleTouchStartDollyPan(event);\n\n            state = STATE.TOUCH_DOLLY_PAN;\n\n            break;\n\n          case TOUCH.DOLLY_ROTATE:\n\n            if (scope.enableZoom === false && scope.enableRotate === false) return;\n\n            handleTouchStartDollyRotate(event);\n\n            state = STATE.TOUCH_DOLLY_ROTATE;\n\n            break;\n\n          default:\n\n            state = STATE.NONE;\n\n        }\n\n        break;\n\n      default:\n\n        state = STATE.NONE;\n\n    }\n\n    if (state !== STATE.NONE) {\n\n      scope.dispatchEvent(startEvent);\n\n    }\n\n  }\n\n  function onTouchMove(event) {\n\n    if (scope.enabled === false) return;\n\n    event.preventDefault(); // prevent scrolling\n    event.stopPropagation();\n\n    switch (state) {\n\n      case STATE.TOUCH_ROTATE:\n\n        if (scope.enableRotate === false) return;\n\n        handleTouchMoveRotate(event);\n\n        scope.update();\n\n        break;\n\n      case STATE.TOUCH_PAN:\n\n        if (scope.enablePan === false) return;\n\n        handleTouchMovePan(event);\n\n        scope.update();\n\n        break;\n\n      case STATE.TOUCH_DOLLY_PAN:\n\n        if (scope.enableZoom === false && scope.enablePan === false) return;\n\n        handleTouchMoveDollyPan(event);\n\n        scope.update();\n\n        break;\n\n      case STATE.TOUCH_DOLLY_ROTATE:\n\n        if (scope.enableZoom === false && scope.enableRotate === false) return;\n\n        handleTouchMoveDollyRotate(event);\n\n        scope.update();\n\n        break;\n\n      default:\n\n        state = STATE.NONE;\n\n    }\n\n  }\n\n  function onTouchEnd(event) {\n\n    if (scope.enabled === false) return;\n\n    handleTouchEnd(event);\n\n    scope.dispatchEvent(endEvent);\n\n    state = STATE.NONE;\n\n  }\n\n  function onContextMenu(event) {\n\n    if (scope.enabled === false) return;\n\n    event.preventDefault();\n\n  }\n\n  //\n\n  scope.domElement.addEventListener('contextmenu', onContextMenu);\n\n  scope.domElement.addEventListener('pointerdown', onPointerDown);\n  scope.domElement.addEventListener('wheel', onMouseWheel);\n\n  scope.domElement.addEventListener('touchstart', onTouchStart);\n  scope.domElement.addEventListener('touchend', onTouchEnd);\n  scope.domElement.addEventListener('touchmove', onTouchMove);\n\n  // force an update at start\n\n  this.update();\n\n};\n\nOrbitControls.prototype = Object.create(EventDispatcher.prototype);\nOrbitControls.prototype.constructor = OrbitControls;\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nvar MapControls = function (object, domElement) {\n\n  OrbitControls.call(this, object, domElement);\n\n  this.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n  this.mouseButtons.LEFT = MOUSE.PAN;\n  this.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n  this.touches.ONE = TOUCH.PAN;\n  this.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n};\n\nMapControls.prototype = Object.create(EventDispatcher.prototype);\nMapControls.prototype.constructor = MapControls;\n\nexport { OrbitControls, MapControls };","import * as THREE from 'three';\n\nimport { DragControls } from './DragControls'\nimport { OrbitControls } from './OrbitControls'\nimport anime from 'animejs/lib/anime.es.js';\nimport * as Tone from 'tone'\n\n\nlet container;\nlet camera, scene, renderer;\nlet orbitControls, dragControls;\nconst tonalBoxes = [];\nlet xPlane, yPlane, zPlane;\nlet alternatingTimeline, concurrentTimeline;\nlet planePosition = {\n  xPlane: -500,\n  zPlane: -500,\n  yPlane: 0,\n}\nconst tonalBoxRadius = 50;\nconst fullLoopDuration = 4 * 1000;\n\n\nfunction init() {\n  container = document.createElement('div');\n  document.body.appendChild(container);\n\n  camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 1, 5000);\n  camera.position.z = 1500 + 30;\n  camera.position.y = 1500;\n  camera.position.x = 1500 - 100;\n\n  scene = new THREE.Scene();\n  scene.background = new THREE.Color(0xf0f0f0);\n\n  initLighting()\n  initBoundingBox()\n  initTonalBoxes()\n  initGridHelper()\n  initPlaybackPlanes()\n  initAlternatingTimeline()\n  initConcurrentTimeline()\n\n  renderer = new THREE.WebGLRenderer({ antialias: true });\n  renderer.setPixelRatio(window.devicePixelRatio);\n  renderer.setSize(window.innerWidth, window.innerHeight);\n\n  renderer.shadowMap.enabled = true;\n  renderer.shadowMap.type = THREE.PCFShadowMap;\n\n  container.appendChild(renderer.domElement);\n\n  orbitControls = new OrbitControls(camera, renderer.domElement);\n\n  dragControls = new DragControls(tonalBoxes, camera, renderer.domElement);\n  dragControls.addEventListener('dragstart', function () { orbitControls.enabled = false; });\n  dragControls.addEventListener('dragend', function () { orbitControls.enabled = true; })\n  dragControls.addEventListener('drag', function (event) { ensureInsideBoundingBox(event.object); });\n\n  window.addEventListener('resize', onWindowResize);\n}\n\nfunction initPlaybackPlanes() {\n  xPlane = new THREE.Mesh(new THREE.BoxGeometry(10, 1000, 1000), new THREE.MeshLambertMaterial({ color: 0x2d6a4f, transparent: true, opacity: 0.3 }));\n  xPlane.position.x = -500;\n  xPlane.position.y = 500;\n  xPlane.visible = false;\n  scene.add(xPlane)\n\n  yPlane = new THREE.Mesh(new THREE.BoxGeometry(1000, 10, 1000), new THREE.MeshLambertMaterial({ color: 0x2d6a4f, transparent: true, opacity: 0.3 }));\n  yPlane.visible = false;\n  scene.add(yPlane)\n\n  zPlane = new THREE.Mesh(new THREE.BoxGeometry(1000, 1000, 10), new THREE.MeshLambertMaterial({ color: 0x2d6a4f, transparent: true, opacity: 0.3 }));\n  zPlane.position.y = 500;\n  zPlane.position.z = -500;\n  zPlane.visible = false;\n  scene.add(zPlane)\n}\n\nfunction onTimelineUpdate() {\n  xPlane.position.x = planePosition.xPlane\n  zPlane.position.z = planePosition.zPlane\n  yPlane.position.y = planePosition.yPlane\n  detectTonalBoxesIntersection()\n}\n\nfunction initTonalBoxesForPlayback() {\n  for (let i = 0; i < tonalBoxes.length; i++) {\n    tonalBoxes[i].material = tonalBoxes[i].offMaterial;\n    tonalBoxes[i].isOn = false;    \n  }\n}\n\nfunction initAlternatingTimeline() {\n  alternatingTimeline = anime.timeline({\n    autoplay: false,\n    loop: true,\n    easing: 'linear',\n    update: onTimelineUpdate\n  });\n  alternatingTimeline\n  .add({\n    targets: planePosition,\n    xPlane: 500,\n    duration: fullLoopDuration / 3,\n    changeBegin: function (_anim) { xPlane.visible = true; },\n    changeComplete: function (_anim) { xPlane.visible = false; },\n  })\n  .add({\n    targets: planePosition,\n    zPlane: 500,\n    duration: fullLoopDuration / 3,\n    changeBegin: function (_anim) { zPlane.visible = true; },\n    changeComplete: function (_anim) { zPlane.visible = false; },\n  })\n  .add({\n    targets: planePosition,\n    yPlane: 1000,\n    duration: fullLoopDuration / 3,\n    changeBegin: function (_anim) { yPlane.visible = true; },\n    changeComplete: function (_anim) { yPlane.visible = false; },\n  })\n}\n\nfunction initConcurrentTimeline() {\n  concurrentTimeline = anime.timeline({\n    autoplay: false,\n    loop: true,\n    easing: 'linear',\n    update: onTimelineUpdate\n  });\n  concurrentTimeline\n    .add({\n      targets: planePosition,\n      xPlane: 500,\n      zPlane: 500,\n      yPlane: 1000,\n      duration: fullLoopDuration,\n      changeBegin: function (_anim) {\n        xPlane.visible = true;\n        yPlane.visible = true;\n        zPlane.visible = true;\n      },\n      changeComplete: function (_anim) {\n        xPlane.visible = false;\n        yPlane.visible = false;\n        zPlane.visible = false;\n      },\n    })\n}\n\nfunction playAlternating() {\n  initTonalBoxesForPlayback()\n  alternatingTimeline.play()\n}\n\nfunction playConcurrent() {\n  initTonalBoxesForPlayback()\n  concurrentTimeline.play()\n}\n\nfunction resetPlayback() {\n  alternatingTimeline.pause()\n  alternatingTimeline.seek(alternatingTimeline.duration * 0)\n  concurrentTimeline.pause()\n  concurrentTimeline.seek(concurrentTimeline.duration * 0)\n  for (let i = 0; i < tonalBoxes.length; i++) {\n    tonalBoxes[i].material = tonalBoxes[i].onMaterial;\n  }\n}\n\nfunction initLighting() {\n  scene.add(new THREE.AmbientLight(0xffffff));\n  const light = new THREE.SpotLight(0xffffff, 1.5);\n  light.position.set(0, 500, 2000);\n  light.angle = Math.PI / 9;\n  light.castShadow = true;\n  light.shadow.camera.near = 1000;\n  light.shadow.camera.far = 4000;\n  light.shadow.mapSize.width = 1024;\n  light.shadow.mapSize.height = 1024;\n\n  scene.add(light);\n}\n\nfunction initTonalBoxes() {\n  const geometry = new THREE.BoxGeometry(tonalBoxRadius * 2, tonalBoxRadius * 2, tonalBoxRadius * 2);\n\n  const params = [\n    // [color, note],\n    [0xef476f, \"C2\"],\n    [0xffd166, \"C3\"],\n    [0xe29578, \"C4\"],\n    [0x118ab2, \"C5\"],\n    [0x073b4c, \"C6\"],\n  ]\n\n  for (let i = 0; i < params.length; i++) {\n    const param = params[i];\n    const onMaterial = new THREE.MeshLambertMaterial({ color: param[0] })\n    const offMaterial = new THREE.MeshBasicMaterial({ color: param[0], wireframe: true })\n    const object = new THREE.Mesh(geometry, onMaterial);\n    \n    // custom fields\n    object.note = param[1]\n    object.onMaterial = onMaterial\n    object.offMaterial = offMaterial\n    object.isOn = false\n\n    //Perfect positioning\n    object.position.x = 0;\n    object.position.y = (i + 1) * (1000 / 6);\n    object.position.z = 500 - ((i + 1) * (1000 / 6));\n\n\n    object.scale.x = 1;\n    object.scale.y = 1;\n    object.scale.z = 1;\n\n    object.castShadow = true;\n    object.receiveShadow = true;\n\n    scene.add(object);\n    tonalBoxes.push(object);\n  }\n}\n\nfunction initBoundingBox() {\n  const boundingLines = []\n  const params = [\n    // [lenX, lenY, lenZ, posX, posY, posZ]\n    [10, 10, 1000, 500, 0, 0],\n    [10, 10, 1000, -500, 0, 0],\n    [10, 10, 1000, 500, 1000, 0],\n    [10, 10, 1000, -500, 1000, 0],\n    [1000, 10, 10, 0, 0, 500],\n    [1000, 10, 10, 0, 0, -500],\n    [1000, 10, 10, 0, 1000, 500],\n    [1000, 10, 10, 0, 1000, -500],\n    [10, 1000, 10, 500, 500, 500],\n    [10, 1000, 10, 500, 500, -500],\n    [10, 1000, 10, -500, 500, 500],\n    [10, 1000, 10, -500, 500, -500],\n  ]\n\n  for (let i = 0; i < params.length; i++) {\n    const param = params[i];\n    const object = new THREE.Mesh(new THREE.BoxGeometry(param[0], param[1], param[2]), new THREE.MeshLambertMaterial({ color: 0x2d6a4f }));\n    object.position.x = param[3]\n    object.position.y = param[4]\n    object.position.z = param[5]\n    boundingLines.push(object)\n  }\n\n  for (let i = 0; i < boundingLines.length; i++) {\n    const boundingLine = boundingLines[i];\n    boundingLine.scale.x = 1;\n    boundingLine.scale.y = 1;\n    boundingLine.scale.z = 1;\n    boundingLine.castShadow = false;\n    boundingLine.receiveShadow = true;\n    scene.add(boundingLine)\n  }  \n}\n\nfunction initGridHelper() {\n  const gridHelper = new THREE.GridHelper(1000, 20);\n  gridHelper.position.y = - 1;\n  scene.add(gridHelper);\n}\n\nfunction ensureInsideBoundingBox(object) {\n  const offset = tonalBoxRadius + 2;\n  if (object.position.x > 500 - offset) object.position.x = 500 - offset;\n  if (object.position.z > 500 - offset) object.position.z = 500 - offset;\n  if (object.position.y > 1000 - offset) object.position.y = 1000 - offset;\n  if (object.position.x < -500 + offset) object.position.x = -500 + offset;\n  if (object.position.z < -500 + offset) object.position.z = -500 + offset;\n  if (object.position.y < 0 + offset) object.position.y = 0 + offset;\n}\n\nfunction detectTonalBoxesIntersection() {\n  for (let i = 0; i < tonalBoxes.length; i++) {\n    const position = tonalBoxes[i].position;\n    const intersectXPlane = xPlane.position.x >= position.x - tonalBoxRadius && xPlane.position.x <= position.x + tonalBoxRadius\n    const intersectYPlane = yPlane.position.y >= position.y - tonalBoxRadius && yPlane.position.y <= position.y + tonalBoxRadius\n    const intersectZPlane = zPlane.position.z >= position.z - tonalBoxRadius && zPlane.position.z <= position.z + tonalBoxRadius\n    const prevIsOn = tonalBoxes[i].isOn\n    const newIsOn = (intersectXPlane || intersectYPlane || intersectZPlane)\n    if (prevIsOn !== newIsOn) {\n      tonalBoxes[i].isOn = newIsOn;\n      if (tonalBoxes[i].isOn) {\n        tonalBoxes[i].material = tonalBoxes[i].onMaterial;\n      } else {\n        tonalBoxes[i].material = tonalBoxes[i].offMaterial;\n      }\n      if (!prevIsOn && newIsOn) {\n        const synth = new Tone.Synth().toDestination();\n        synth.triggerAttackRelease(tonalBoxes[i].note, '8n', Tone.now())\n      }\n    }\n  }\n}\n\nfunction randomizeTonalBoxesPosition() {\n  for (let i = 0; i < tonalBoxes.length; i++) {\n    tonalBoxes[i].position.x = Math.floor(Math.random() * 1000) - 500;\n    tonalBoxes[i].position.y = Math.floor(Math.random() * 1000);\n    tonalBoxes[i].position.z = Math.floor(Math.random() * 1000) - 500;\n    ensureInsideBoundingBox(tonalBoxes[i])\n  }\n}\n\nfunction animate() {\n  requestAnimationFrame(animate);\n  renderer.render(scene, camera);\n}\n\nfunction onWindowResize() {\n\n  camera.aspect = window.innerWidth / window.innerHeight;\n  camera.updateProjectionMatrix();\n  renderer.setSize(window.innerWidth, window.innerHeight);\n\n}\n\nconst exports = { init, animate, playAlternating, playConcurrent, resetPlayback, randomizeTonalBoxesPosition }\n\nexport default exports;","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react/jsx-no-target-blank */\nimport { useEffect, useState } from 'react';\n\nimport './App.css';\nimport Engine from './lib/Engine'\n\nfunction App() {\n\n  const [playbackStatus, setPlaybackStatus] = useState('stopped');\n\n  useEffect(() => {\n    Engine.init()\n    Engine.animate()\n  }, []);\n\n  const onPlayConcurrent = () => {\n    if (playbackStatus !== 'stopped') Engine.resetPlayback()\n    setPlaybackStatus('concurrent');\n    Engine.playConcurrent()\n  }\n\n  const onPlayAlternating = () => {\n    if (playbackStatus !== 'stopped') Engine.resetPlayback()\n    setPlaybackStatus('alternating');\n    Engine.playAlternating();\n  }\n\n  const onStop = () => {\n    setPlaybackStatus('stopped');\n    Engine.resetPlayback()\n  }\n\n  const onRandomizeTonalBoxesPosition = () => {\n    Engine.randomizeTonalBoxesPosition()\n  }\n\n  return (\n    <div id=\"info\">\n      Move objects around with your mouse by dragging them around the screen.<br />\n\t\t\tUse mouse and scroll wheel to move the camera around.<br/>\n      <a onClick={onPlayConcurrent}>Play Together</a> . <a onClick={onPlayAlternating}>Play Alternating</a> . <a onClick={onStop}>Stop</a><br/>\n      <a onClick={onRandomizeTonalBoxesPosition}>Randomize Position</a>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}